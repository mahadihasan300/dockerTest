//// New
//buildscript {
//	ext {
//		springBootVersion = '3.0.0.RELEASE'
//	}
//	repositories {
//		mavenCentral()
//	}
//	dependencies {
//		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		classpath('se.transmode.gradle:gradle-docker:1.2')
//	}
//}
//
//
//plugins {
//	id 'java'
//	id 'war'
//	id 'org.springframework.boot' version '3.0.0'
//	id 'io.spring.dependency-management' version '1.1.0'
//}
//// new
//apply plugin: 'docker'
//
//archivesBaseName = 'project1'
//group = 'com.example'
////version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '17'
//
//repositories {
//	mavenCentral()
//}
//
//dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
//	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}
//
//task buildDocker(type: Docker, dependsOn: build) {
//	applicationName = jar.baseName
//	dockerfile = file('src/main/docker/Dockerfile')
//	doFirst {
//		copy {
//			from jar
//			into stageDir
//		}
//	}
//}
//jar {
//	manifest {
//		attributes "Main-Class": "com.example.dockerTest.DockerTestApplication"
//	}
//
//	from {
//		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//	}
//}



plugins {
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "com.palantir.docker" version "0.22.1"
	id "com.palantir.docker-run" version "0.22.1"
}

//version = '0.0.1-SNAPSHOT'

group = 'com.example'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}


docker {
	name "${project.name}:${project.version}"
//    dockerfile file('src/docker/Dockerfile')
	dockerfile file('Dockerfile')
	copySpec.from(jar).rename(".*", "dockertest.jar")
	buildArgs(['JAR_FILE': "dockertest.jar"])
	files 'springreadyapp.jar'
	//tag 'DockerHub', "mesuk08/springreadyapp:${project.version}"
}

dockerRun {
	name "${project.name}"
	image "${project.name}:${project.version}"
	ports '8081:8081'
	clean true
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}
test {
	useJUnitPlatform()
}